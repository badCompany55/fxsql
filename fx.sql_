-- all records returned with openlow_spread, ten_day_max, and ten_day_max_time;
create view base_table as
	select *, (lowmid <= (select min(lowmid) from eur_usd eu2
						where eu2.time between e.time and e.ten_day_max_time)) entry_bottom,
			  (highmid >= (select max(highmid) from eur_usd eu2
			  			where eu2.time between e.time and e.ten_day_max_time)) entry_top
	from ( 
		-- select *, (select eu2.time from eur_usd eu2 where d.ten_day_max = highmid ) ten_day_max_time
		select *, (select eu2.time from eur_usd eu2
			where d.ten_day_max = highmid 
			and eu2.time between d.time and (d.time + 12) limit 1) ten_day_max_time,
			(select eu3.time from eur_usd eu3 
			where d.ten_day_min = lowmid 
			and eu3.time between d.time and (d.time + 12) limit 1) ten_day_min_time
		from (
			select *, ((openmid - lowmid) * 10) openlow_spread,
			((highmid - openmid) * 10) openhigh_spread,
			max(highmid) over(rows between current row and 10 following) ten_day_max,
			min(lowmid) over(rows between current row and 10 following ) ten_day_min
			from eur_usd eu 	
		) as d
	) as e

drop view base_table;

select * from base_table;

create view bottom_candle as
select * from (
	select *, 
	rank() over(partition by ten_day_max_time order by time)
	from base_table bt 
	where entry_bottom 
	and (ten_day_max - openmid) > openlow_spread
	order by time 
) as a
where rank = 1;

drop view bottom_candle;

select * from bottom_candle;

create view top_candle as
select * from (
	select *, 
	rank() over(partition by ten_day_min order by time)
	from base_table bt 
	where entry_top 
	and (openmid - ten_day_min) > openhigh_spread
	order by time 
) as a
where rank = 1;

drop view top_candle;

select * from top_candle;

select bc.time bottom_candle, bt.time, (bt.lowmid - bt.openmid) as olm, (bt.highmid - bt.openmid) as ohm, (bt.highmid - bt.lowmid),
(bt.closemid - bt.openmid) as ocm, bt.volume
from base_table bt, bottom_candle bc
where bt.time between (bc.time - 3) and (bc.time);



